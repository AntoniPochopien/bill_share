create table "public"."Group_User" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."Group_User" enable row level security;

create table "public"."Groups" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "group_name" character varying
);


alter table "public"."Groups" enable row level security;

create table "public"."Users" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint not null,
    "username" character varying not null
);


alter table "public"."Users" enable row level security;

CREATE UNIQUE INDEX "Group_User_pkey" ON public."Group_User" USING btree (id);

CREATE UNIQUE INDEX "Groups_pkey" ON public."Groups" USING btree (id);

CREATE UNIQUE INDEX "Users_pkey" ON public."Users" USING btree (id);

alter table "public"."Group_User" add constraint "Group_User_pkey" PRIMARY KEY using index "Group_User_pkey";

alter table "public"."Groups" add constraint "Groups_pkey" PRIMARY KEY using index "Groups_pkey";

alter table "public"."Users" add constraint "Users_pkey" PRIMARY KEY using index "Users_pkey";

alter table "public"."Group_User" add constraint "Group_User_id_fkey" FOREIGN KEY (id) REFERENCES "Groups"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."Group_User" validate constraint "Group_User_id_fkey";

alter table "public"."Group_User" add constraint "Group_User_id_fkey1" FOREIGN KEY (id) REFERENCES "Users"(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."Group_User" validate constraint "Group_User_id_fkey1";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
begin

  insert into public.profiles (id, username)
  values (new.id, new.raw_user_meta_data ->> 'username');

  return new;
end;
$function$
;

grant delete on table "public"."Group_User" to "anon";

grant insert on table "public"."Group_User" to "anon";

grant references on table "public"."Group_User" to "anon";

grant select on table "public"."Group_User" to "anon";

grant trigger on table "public"."Group_User" to "anon";

grant truncate on table "public"."Group_User" to "anon";

grant update on table "public"."Group_User" to "anon";

grant delete on table "public"."Group_User" to "authenticated";

grant insert on table "public"."Group_User" to "authenticated";

grant references on table "public"."Group_User" to "authenticated";

grant select on table "public"."Group_User" to "authenticated";

grant trigger on table "public"."Group_User" to "authenticated";

grant truncate on table "public"."Group_User" to "authenticated";

grant update on table "public"."Group_User" to "authenticated";

grant delete on table "public"."Group_User" to "service_role";

grant insert on table "public"."Group_User" to "service_role";

grant references on table "public"."Group_User" to "service_role";

grant select on table "public"."Group_User" to "service_role";

grant trigger on table "public"."Group_User" to "service_role";

grant truncate on table "public"."Group_User" to "service_role";

grant update on table "public"."Group_User" to "service_role";

grant delete on table "public"."Groups" to "anon";

grant insert on table "public"."Groups" to "anon";

grant references on table "public"."Groups" to "anon";

grant select on table "public"."Groups" to "anon";

grant trigger on table "public"."Groups" to "anon";

grant truncate on table "public"."Groups" to "anon";

grant update on table "public"."Groups" to "anon";

grant delete on table "public"."Groups" to "authenticated";

grant insert on table "public"."Groups" to "authenticated";

grant references on table "public"."Groups" to "authenticated";

grant select on table "public"."Groups" to "authenticated";

grant trigger on table "public"."Groups" to "authenticated";

grant truncate on table "public"."Groups" to "authenticated";

grant update on table "public"."Groups" to "authenticated";

grant delete on table "public"."Groups" to "service_role";

grant insert on table "public"."Groups" to "service_role";

grant references on table "public"."Groups" to "service_role";

grant select on table "public"."Groups" to "service_role";

grant trigger on table "public"."Groups" to "service_role";

grant truncate on table "public"."Groups" to "service_role";

grant update on table "public"."Groups" to "service_role";

grant delete on table "public"."Users" to "anon";

grant insert on table "public"."Users" to "anon";

grant references on table "public"."Users" to "anon";

grant select on table "public"."Users" to "anon";

grant trigger on table "public"."Users" to "anon";

grant truncate on table "public"."Users" to "anon";

grant update on table "public"."Users" to "anon";

grant delete on table "public"."Users" to "authenticated";

grant insert on table "public"."Users" to "authenticated";

grant references on table "public"."Users" to "authenticated";

grant select on table "public"."Users" to "authenticated";

grant trigger on table "public"."Users" to "authenticated";

grant truncate on table "public"."Users" to "authenticated";

grant update on table "public"."Users" to "authenticated";

grant delete on table "public"."Users" to "service_role";

grant insert on table "public"."Users" to "service_role";

grant references on table "public"."Users" to "service_role";

grant select on table "public"."Users" to "service_role";

grant trigger on table "public"."Users" to "service_role";

grant truncate on table "public"."Users" to "service_role";

grant update on table "public"."Users" to "service_role";


