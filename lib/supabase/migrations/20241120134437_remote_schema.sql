revoke delete on table "public"."Group_User" from "anon";

revoke insert on table "public"."Group_User" from "anon";

revoke references on table "public"."Group_User" from "anon";

revoke select on table "public"."Group_User" from "anon";

revoke trigger on table "public"."Group_User" from "anon";

revoke truncate on table "public"."Group_User" from "anon";

revoke update on table "public"."Group_User" from "anon";

revoke delete on table "public"."Group_User" from "authenticated";

revoke insert on table "public"."Group_User" from "authenticated";

revoke references on table "public"."Group_User" from "authenticated";

revoke select on table "public"."Group_User" from "authenticated";

revoke trigger on table "public"."Group_User" from "authenticated";

revoke truncate on table "public"."Group_User" from "authenticated";

revoke update on table "public"."Group_User" from "authenticated";

revoke delete on table "public"."Group_User" from "service_role";

revoke insert on table "public"."Group_User" from "service_role";

revoke references on table "public"."Group_User" from "service_role";

revoke select on table "public"."Group_User" from "service_role";

revoke trigger on table "public"."Group_User" from "service_role";

revoke truncate on table "public"."Group_User" from "service_role";

revoke update on table "public"."Group_User" from "service_role";

revoke delete on table "public"."Groups" from "anon";

revoke insert on table "public"."Groups" from "anon";

revoke references on table "public"."Groups" from "anon";

revoke select on table "public"."Groups" from "anon";

revoke trigger on table "public"."Groups" from "anon";

revoke truncate on table "public"."Groups" from "anon";

revoke update on table "public"."Groups" from "anon";

revoke delete on table "public"."Groups" from "authenticated";

revoke insert on table "public"."Groups" from "authenticated";

revoke references on table "public"."Groups" from "authenticated";

revoke select on table "public"."Groups" from "authenticated";

revoke trigger on table "public"."Groups" from "authenticated";

revoke truncate on table "public"."Groups" from "authenticated";

revoke update on table "public"."Groups" from "authenticated";

revoke delete on table "public"."Groups" from "service_role";

revoke insert on table "public"."Groups" from "service_role";

revoke references on table "public"."Groups" from "service_role";

revoke select on table "public"."Groups" from "service_role";

revoke trigger on table "public"."Groups" from "service_role";

revoke truncate on table "public"."Groups" from "service_role";

revoke update on table "public"."Groups" from "service_role";

revoke delete on table "public"."Users" from "anon";

revoke insert on table "public"."Users" from "anon";

revoke references on table "public"."Users" from "anon";

revoke select on table "public"."Users" from "anon";

revoke trigger on table "public"."Users" from "anon";

revoke truncate on table "public"."Users" from "anon";

revoke update on table "public"."Users" from "anon";

revoke delete on table "public"."Users" from "authenticated";

revoke insert on table "public"."Users" from "authenticated";

revoke references on table "public"."Users" from "authenticated";

revoke select on table "public"."Users" from "authenticated";

revoke trigger on table "public"."Users" from "authenticated";

revoke truncate on table "public"."Users" from "authenticated";

revoke update on table "public"."Users" from "authenticated";

revoke delete on table "public"."Users" from "service_role";

revoke insert on table "public"."Users" from "service_role";

revoke references on table "public"."Users" from "service_role";

revoke select on table "public"."Users" from "service_role";

revoke trigger on table "public"."Users" from "service_role";

revoke truncate on table "public"."Users" from "service_role";

revoke update on table "public"."Users" from "service_role";

alter table "public"."Group_User" drop constraint "Group_User_id_fkey";

alter table "public"."Group_User" drop constraint "Group_User_id_fkey1";

alter table "public"."Group_User" drop constraint "Group_User_pkey";

alter table "public"."Groups" drop constraint "Groups_pkey";

alter table "public"."Users" drop constraint "Users_pkey";

drop index if exists "public"."Group_User_pkey";

drop index if exists "public"."Users_pkey";

drop index if exists "public"."Groups_pkey";

drop table "public"."Group_User";

drop table "public"."Groups";

drop table "public"."Users";

create table "public"."groups" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "group_name" character varying not null
);


alter table "public"."groups" enable row level security;

create table "public"."groups_profiles" (
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null default auth.uid(),
    "group_id" bigint not null
);


alter table "public"."groups_profiles" enable row level security;

CREATE UNIQUE INDEX groups_profiles_pkey ON public.groups_profiles USING btree (user_id, group_id);

CREATE UNIQUE INDEX "Groups_pkey" ON public.groups USING btree (id);

alter table "public"."groups" add constraint "Groups_pkey" PRIMARY KEY using index "Groups_pkey";

alter table "public"."groups_profiles" add constraint "groups_profiles_pkey" PRIMARY KEY using index "groups_profiles_pkey";

alter table "public"."groups_profiles" add constraint "groups_profiles_group_id_fkey" FOREIGN KEY (group_id) REFERENCES groups(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."groups_profiles" validate constraint "groups_profiles_group_id_fkey";

alter table "public"."groups_profiles" add constraint "groups_profiles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."groups_profiles" validate constraint "groups_profiles_user_id_fkey";

grant delete on table "public"."groups" to "anon";

grant insert on table "public"."groups" to "anon";

grant references on table "public"."groups" to "anon";

grant select on table "public"."groups" to "anon";

grant trigger on table "public"."groups" to "anon";

grant truncate on table "public"."groups" to "anon";

grant update on table "public"."groups" to "anon";

grant delete on table "public"."groups" to "authenticated";

grant insert on table "public"."groups" to "authenticated";

grant references on table "public"."groups" to "authenticated";

grant select on table "public"."groups" to "authenticated";

grant trigger on table "public"."groups" to "authenticated";

grant truncate on table "public"."groups" to "authenticated";

grant update on table "public"."groups" to "authenticated";

grant delete on table "public"."groups" to "service_role";

grant insert on table "public"."groups" to "service_role";

grant references on table "public"."groups" to "service_role";

grant select on table "public"."groups" to "service_role";

grant trigger on table "public"."groups" to "service_role";

grant truncate on table "public"."groups" to "service_role";

grant update on table "public"."groups" to "service_role";

grant delete on table "public"."groups_profiles" to "anon";

grant insert on table "public"."groups_profiles" to "anon";

grant references on table "public"."groups_profiles" to "anon";

grant select on table "public"."groups_profiles" to "anon";

grant trigger on table "public"."groups_profiles" to "anon";

grant truncate on table "public"."groups_profiles" to "anon";

grant update on table "public"."groups_profiles" to "anon";

grant delete on table "public"."groups_profiles" to "authenticated";

grant insert on table "public"."groups_profiles" to "authenticated";

grant references on table "public"."groups_profiles" to "authenticated";

grant select on table "public"."groups_profiles" to "authenticated";

grant trigger on table "public"."groups_profiles" to "authenticated";

grant truncate on table "public"."groups_profiles" to "authenticated";

grant update on table "public"."groups_profiles" to "authenticated";

grant delete on table "public"."groups_profiles" to "service_role";

grant insert on table "public"."groups_profiles" to "service_role";

grant references on table "public"."groups_profiles" to "service_role";

grant select on table "public"."groups_profiles" to "service_role";

grant trigger on table "public"."groups_profiles" to "service_role";

grant truncate on table "public"."groups_profiles" to "service_role";

grant update on table "public"."groups_profiles" to "service_role";

create policy "Enable insert for authenticated users only"
on "public"."groups"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."groups"
as permissive
for select
to public
using (true);


create policy "Allow authenticated user update"
on "public"."groups_profiles"
as permissive
for update
to authenticated
using (true);


create policy "Allow authenticated user update"
on "public"."profiles"
as permissive
for update
to authenticated
using ((( SELECT auth.uid() AS uid) = id))
with check ((auth.role() = 'authenticated'::text));


create policy "Enable read access for all users"
on "public"."profiles"
as permissive
for select
to public
using (true);



